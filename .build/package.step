<?xml version="1.0" encoding="utf-8" ?>
<project name="PackageBuilder" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <!-- DO NOT EDIT THIS FILE - Add custom tasks in BuildTasks.Custom folder with file by the same name - find out more at http://uppercut.pbwiki.com -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <include buildfile="${dirs.current.file}${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <property name="file.build_log" value="${dirs.build}${path.separator}build.log" />

  <target name="go" depends="run_tasks" />

  <!-- run_normal_tasks is called from run_tasks unless replace extension exists-->
  <target name="run_normal_tasks"
          depends="prepare, build_artifacts, app, app_published, web, db, reports, file_server, environment_files, deployment_scripts, settings_files, set_file_attributes_to_normal, build_deployment_files, build_info_file, documentation"
          description="Packaging project." />

  <target name="prepare">
    <echo level="Warning" message="Removing and adding ${dirs.drop}."/>
    <delete dir="${dirs.drop}" failonerror="false" />
    <mkdir dir="${dirs.drop}" />
  </target>

  <target name="build_artifacts">
    <echo level="Warning" message="Packaging build artifacts (such as test results) to ${dirs.drop}${path.separator}${folder.build_artifacts}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.build_artifacts}">
      <fileset basedir="${dirs.build}${path.separator}${folder.build_artifacts}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="app">
    <echo level="Warning" message="Packaging application items to ${dirs.drop}${path.separator}${folder.app.drop}."/>
    <copy todir="${dirs.drop}${path.separator}${folder.app.drop}">
      <fileset basedir="${dirs.build}${path.separator}${folder.app.drop}">
        <exclude name="${folder.database}${path.separator}**" />
        <exclude name="${folder.reports}${path.separator}**" />
        <exclude name="${folder.deployment}${path.separator}**" />
        <exclude name="${folder.documentation}${path.separator}**" />
        <exclude name="${folder.environment_files}${path.separator}**" />
        <exclude name="${folder.file_server}${path.separator}**" />
        <exclude name="${folder.build_artifacts}${path.separator}**" />
        <exclude name="*_Published*${path.separator}**" />
        <exclude name="*Test*${path.separator}**" />
        <exclude name="*.Specs*${path.separator}**" />
        <exclude name="*bdddoc.*" />
        <exclude name="*developwithpassion.bdd.*" />
        <exclude name="*nunit.*" />
        <exclude name="*xunit.*" />
        <exclude name="*MbUnit*.*" />
        <exclude name="*Refly.*" />
        <exclude name="*QuickGraph*.*" />
        <exclude name="*Rhino.Mocks.*" />
        <exclude name="*Moq.*" />
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="app_published">
    <echo level="Warning" message="Packaging published applications to ${dirs.drop}${path.separator}_PublishedApplications."/>
    <property name="dir.build.publishedapps" value="${dirs.build}${path.separator}${folder.app.drop}${path.separator}_PublishedApplications" />
    <copy todir="${dirs.drop}${path.separator}_PublishedApplications" if="${directory::exists(dir.build.publishedapps)}">
      <fileset basedir="${dir.build.publishedapps}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="web">
    <echo level="Warning" message="Packaging website to ${dirs.drop}${path.separator}_PublishedWebSites." />
    <property name="dir.build.publishedwebsites" value="${dirs.build}${path.separator}${folder.app.drop}${path.separator}_PublishedWebSites" />
    <copy todir="${dirs.drop}${path.separator}_PublishedWebSites" if="${directory::exists(dir.build.publishedwebsites)}">
      <fileset basedir="${dir.build.publishedwebsites}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="db">
    <echo level="Warning" message="Packaging database files to ${dirs.drop}${path.separator}${folder.database}."/>
    <property name="dir.build.db" value="${dirs.build}${path.separator}${folder.database}" />
    <copy todir="${dirs.drop}${path.separator}${folder.database}" if="${directory::exists(dir.build.db)}">
      <fileset basedir="${dir.build.db}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="reports">
    <echo level="Warning" message="Packaging reports to ${dirs.drop}${path.separator}${folder.reports}."/>
    <property name="dir.reports" value="${dirs.current}${path.separator}${folder.reports}" />
    <copy todir="${dirs.drop}${path.separator}${folder.reports}" if="${directory::exists(dir.reports)}">
      <fileset basedir="${dir.reports}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="file_server">
    <echo level="Warning" message="Packaging file server items to ${dirs.drop}${path.separator}${folder.file_server}."/>
    <property name="dir.fileserver" value="${dirs.current}${path.separator}${folder.file_server}" />
    <copy todir="${dirs.drop}${path.separator}${folder.file_server}" if="${directory::exists(dir.fileserver)}">
      <fileset basedir="${dir.fileserver}">
        <exclude name="**${path.separator}*.template" />
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>

    <echo level="Warning" message="Packaging output fileserver items to ${dirs.drop}${path.separator}FileServer."/>
    <property name="dir.build.fileserver" value="${dirs.build}${path.separator}${folder.app.drop}${path.separator}FileServer" />
    <copy todir="${dirs.drop}${path.separator}FileServer" if="${directory::exists(dir.build.fileserver)}">
      <fileset basedir="${dir.build.fileserver}">
        <include name="**/**" />
      </fileset>
    </copy>
  </target>

  <target name="environment_files">
    <echo level="Warning" message="Packaging environment files to ${dirs.drop}${path.separator}${folder.environment_files}."/>
    <property name="dir.build.environmentfiles" value="${dirs.build}${path.separator}${folder.environment_files}" />
    <copy todir="${dirs.drop}${path.separator}${folder.environment_files}" if="${directory::exists(dir.build.environmentfiles)}">
      <fileset basedir="${dir.build.environmentfiles}">
        <include name="**/*.*" />
        <include name="**/*" />
      </fileset>
    </copy>
  </target>

  <target name="deployment_scripts">
    <echo level="Warning" message="Packaging deployment scripts from '${dirs.current}${path.separator}${folder.deployment}' to '${dirs.drop}${path.separator}${folder.deployment}'."/>
    <property name="dir.deploymentscripts" value="${dirs.current}${path.separator}${folder.deployment}" />
    <copy todir="${dirs.drop}${path.separator}${folder.deployment}" if="${directory::exists(dir.deploymentscripts)}">
      <fileset basedir="${dir.deploymentscripts}">
        <exclude name="**${path.separator}*.template" />
        <exclude name="templates${path.separator}**" />
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="settings_files">
    <echo level="Warning" message="Packaging settings files to ${dirs.drop}${path.separator}${folder.settings}."/>
    <property name="dir.settingsfiles" value="${dirs.current}${path.separator}${folder.settings}" />
    <copy todir="${dirs.drop}${path.separator}${folder.settings}" if="${directory::exists(dir.settingsfiles)}">
      <fileset basedir="${dir.settingsfiles}">
        <include name="**/*.settings" />
      </fileset>
    </copy>
  </target>

  <target name="set_file_attributes_to_normal">
    <echo level="Warning" message="Removing read only attributes that some source control things put on files in '${dirs.drop}'." />
    <attrib normal="true" failonerror="false">
      <fileset basedir="${dirs.drop}">
        <include name="**/*" />
      </fileset>
    </attrib>
  </target>

  <target name="build_deployment_files">
    <echo level="Warning" message="Building Deployment Files."/>
    <nant buildfile="deploymentBuilder.step" inheritall="true" failonerror="false" if="${run.deploymentbuilder}" />
  </target>

  <target name="build_info_file">
    <echo level="Warning" message="Copying ${file.build_info} to ${folder.build_artifacts}, ${folder.app.drop}, and ${folder.deployment} in the ${dirs.drop} folder."/>

    <copy
     file="${file.build_info}"
     todir="${dirs.drop}${path.separator}${folder.build_artifacts}"
      />

    <copy
     file="${file.build_info}"
     todir="${dirs.drop}${path.separator}${folder.app.drop}"
      />

    <copy
      file="${file.build_info}"
      todir="${dirs.drop.deployment}"
      if="${directory::exists(dirs.drop.deployment)}" />
  </target>

  <target name="documentation">
    <echo level="Warning" message="Packaging documentation files to ${dirs.drop}${path.separator}${folder.documentation}."/>
    <property name="dir.build.documentation" value="${dirs.build}${path.separator}${folder.documentation}" />
    <copy todir="${dirs.drop}${path.separator}${folder.documentation}" if="${directory::exists(dir.build.documentation)}">
      <fileset basedir="${dir.build.documentation}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

</project>
