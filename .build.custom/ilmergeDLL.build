<?xml version="1.0" encoding="utf-8" ?>
<project name="ILMergeBuilder" default="go">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current" value="${directory::get-current-directory()}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <include buildfile="${dirs.current}${path.separator}${folder.build_scripts}${path.separator}default.build.settings" />
  <property name="build.step.name" value="${project::get-name()}" />
  <property name="build.step.path" value="${project::get-buildfile-path()}" />
  <!-- build step customizations below this -->

  <property name="dirs.ilmerge.folder" value="${dirs.lib}${path.separator}ILMerge" />
  <property name="dirs.merge.log" value="${dirs.drop}${path.separator}build_artifacts${path.separator}ilmerge" />
  <property name="log.merge" value="ilmergeDLL.log" />
  <!-- overwrite this property -->
  <property name="dirs.merge.from" value="${dirs.drop}${path.separator}${folder.app.drop}${path.separator}lib" />
  <property name="dirs.merge.to" value="${dirs.drop}${path.separator}merge" overwrite="false" />

  <property name="file.internalize.ignore" value="ilmerge.internalize.ignore.dll.txt" />
  <property name="path.file.internalize.ignore" value="${dirs.build_scripts_custom}${path.separator}${file.internalize.ignore}" />
  <!-- overwrite this property -->
  <property name="file.merge.name" value="chocolatey.dll" />
  <!-- exe winexe dll -->
  <!-- overwrite this property -->
  <property name="merge.target.type" value="dll" />
  <property name="args.ilmerge" value="/internalize /targetplatform:&quot;v4,${environment::get-variable('ProgramFiles(x86)')}\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0&quot; /target:${merge.target.type} /out:${dirs.merge.to}${path.separator}${file.merge.name} /keyfile:${path.key.name.private} /log:${dirs.merge.log}${path.separator}${log.merge} /xmldocs /allowDup ${file.merge.name} " />
  <property name="args.ilmerge" value="/internalize:${path.file.internalize.ignore} /targetplatform:&quot;v4,${environment::get-variable('ProgramFiles(x86)')}\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0&quot; /target:${merge.target.type} /out:${dirs.merge.to}${path.separator}${file.merge.name} /keyfile:${path.key.name.private} /log:${dirs.merge.log}${path.separator}${log.merge} /xmldocs /allowDup ${file.merge.name} " if="${file::exists(path.file.internalize.ignore)}"/>

  <target name="go"
          depends="prepare, get_regular_dlls, run_ilmerge, copy_configs, remove_unneeded_assemblies, copy_from_merge, delete_merge_folder"
          description="Running ILMerge with UppercuT default.build." />

  <target name="prepare">
    <mkdir dir="${dirs.merge.log}" />
    <mkdir dir="${dirs.merge.from}" />
    <mkdir dir="${dirs.merge.to}" />
  </target>

  <target name="get_regular_dlls">
    <echo level="Warning" message="Getting output dlls based on name in directory ${path::get-full-path(dirs.merge.from)}." />
    <property name="dll.names" value="" />
    <foreach item="File" property="dll.filename">
      <in>
        <items>
          <exclude name="${dirs.merge.from}${path.separator}${file.merge.name}" />
          <include name="${dirs.merge.from}${path.separator}chocolatey*.dll" />
          <include name="${dirs.merge.from}${path.separator}NuGet.Core.dll" />
          <include name="${dirs.merge.from}${path.separator}Microsoft.Web.XmlTransform.dll" />
          <include name="${dirs.merge.from}${path.separator}Rhino.Licensing.dll" />
          <include name="${dirs.merge.from}${path.separator}System.Reactive*.dll" />
          <include name="${dirs.merge.from}${path.separator}SimpleInjector.dll" />
          <include name="${dirs.merge.from}${path.separator}AlphaFS.dll" />
          <!-- <exclude name="${dirs.merge.from}${path.separator}*" /> -->
        </items>
      </in>
      <do>
        <property name="dll.names" value="${dll.names + ' ' + path::get-file-name(dll.filename)}" />
      </do>
    </foreach>

    <property name="dlls.regular" value="${dll.names}" />
    <property name="args.ilmerge" value="${args.ilmerge} ${dlls.regular}" />
  </target>

  <target name="run_ilmerge">
    <echo level="Warning" message="Merging the the contents of ${dirs.merge.from} into a single executable - ${dirs.merge.to}${path.separator}${file.merge.name}. This will fail if all dependencies are not resolved."/>
    <echo level="Warning" message="Running this: ${app.ilmerge} ${args.ilmerge}"/>
    <exec program="${app.ilmerge}"
          workingdir="${dirs.merge.from}"
          commandline="${args.ilmerge}" if="${platform::is-windows()}" />
    <exec program="mono"
          workingdir="${dirs.merge.from}"
          commandline="'${app.ilmerge}' ${args.ilmerge}" if="${platform::is-unix()}"/>
  </target>

  <target name="copy_configs">
    <copy todir="${dirs.merge.to}">
      <fileset basedir="${dirs.merge.from}">
        <include name="**/*.config" />
      </fileset>
    </copy>
  </target>

  <target name="remove_unneeded_assemblies">
    <echo level="Warning" message="Removing unneeded assemblies before moving the merged assembly back into ${dirs.merge.from}."/>
    <delete>
      <fileset basedir="${dirs.merge.from}" >
        <exclude name="log4net.dll" />
        <!--include name="*.*" /-->
        <include name="*" />
      </fileset>
    </delete>
  </target>

  <target name="copy_from_merge">
    <copy todir="${dirs.merge.from}">
      <fileset basedir="${dirs.merge.to}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <target name="delete_merge_folder">
    <delete dir="${dirs.merge.to}" failonerror="false"  />
  </target>

</project>
