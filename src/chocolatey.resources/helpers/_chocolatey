#compdef chocolatey.exe

#
# name: _chocolatey
# auth: hltdev [hltdev8642@gmail.com]
# desc: completion file for chocolatey (mainly intended for use in WSL/WSL2)
#

allcommands=(
    '--debug'
    '--verbose'
    '--trace'
    '--noop'
    '--help'
    '--accept-license'
    '--confirm'
    '--limit-output'
    '--no-progress'
    '--log-file'
    '--execution-timeout'
    '--cache-location'
    '--proxy'
    '--proxy-user'
    '--proxy-password'
    '--proxy-bypass-list'
    '--proxy-bypass-on-local'
    '--force'
    '--no-color'
    '--skip-compatibility-checks'
)

proListOptions=(
    '--audit'
    '--use-self-service'
)
proInfoOptions=(
    '--use-self-service'
)
proInstallUpgradeOptions=(
    '--install-directory'
    '--package-parameters-sensitive'
    '--max-download-rate'
    '--install-arguments-sensitive'
    '--skip-download-cache'
    '--use-download-cache'
    '--skip-virus-check'
    '--virus-check'
    '--virus-positives-minimum'
    '--deflate-package-size'
    '--no-deflate-package-size'
    '--deflate-nupkg-only'
    '--use-self-service'
)
proUpgradeOptions=(
    '--exclude-chocolatey-packages-during-upgrade-all'
    '--include-chocolatey-packages-during-upgrade-all'
    '--use-self-service'
)
proNewOptions=(
    '--file'
    '--build-package'
    '--file64'
    '--from-programs-and-features'
    '--use-original-location'
    '--keep-remote'
    '--url'
    '--url64'
    '--checksum'
    '--checksum64'
    '--checksumtype'
    '--pause-on-error'
    '--remove-architecture-from-name'
    '--include-architecture-in-name'
)
proUninstallOptions=(
    '--from-programs-and-features'
    '--use-self-service'
)
proPinOptions=(
    '--note'
    '--use-self-service'
)
proOutdatedOptions=(
    '--use-self-service'
)
proPushOptions=(
    '--use-self-service'
)
list=(
    '--lo'
    '--id-only'
    '--pre'
    '--exact'
    '--by-id-only'
    '--id-starts-with'
    '--detailed'
    '--approved-only'
    '--not-broken'
    '--source'
    '--user'
    '--password'
    '--local-only'
    '--prerelease'
    '--include-programs'
    '--page'
    '--page-size'
    '--order-by-popularity'
    '--download-cache-only'
    '--disable-package-repository-optimizations'
    $proListOptions
    $allcommands
)

search=(
    '--pre'
    '--exact'
    '--by-id-only'
    '--id-starts-with'
    '--detailed'
    '--approved-only'
    '--not-broken'
    '--source'
    '--user'
    '--password'
    '--local-only'
    '--prerelease'
    '--include-programs'
    '--page'
    '--page-size'
    '--order-by-popularity'
    '--download-cache-only'
    '--disable-package-repository-optimizations'
    $proListOptions
    $allcommands
)
info=(
    '--pre'
    '--lo'
    '--source'
    '--user'
    '--password'
    '--local-only'
    '--prerelease'
    '--disable-package-repository-optimizations'
    $proInfoOptions
    $allcommands
)
install=(
    '-y'
    '-whatif'
    '-?'
    '--pre'
    '--version'
    '--params'
    '--install-arguments'
    '--override-arguments'
    '--ignore-dependencies'
    '--source'
    '--user'
    '--password'
    '--prerelease'
    '--forcex86'
    '--not-silent'
    '--package-parameters'
    '--exit-when-reboot-detected'
    '--ignore-detected-reboot'
    '--allow-downgrade'
    '--force-dependencies'
    '--require-checksums'
    '--use-package-exit-codes'
    '--ignore-package-exit-codes'
    '--skip-automation-scripts'
    '--allow-multiple-versions'
    '--ignore-checksums'
    '--allow-empty-checksums'
    '--allow-empty-checksums-secure'
    '--download-checksum'
    '--download-checksum-type'
    '--download-checksum-x64'
    '--download-checksum-type-x64'
    '--stop-on-first-package-failure'
    '--disable-package-repository-optimizations'
    '--pin'
    $proInstallUpgradeOptions
    $allcommands
)
pin=(
    '--name'
    '--version'
    $proPinOptions
    $allcommands
)
outdated=(
    -?
    '--source'
    '--user'
    '--password'
    '--ignore-pinned'
    '--ignore-unfound'
    '--pre'
    '--prerelease'
    '--disable-package-repository-optimizations'
    $proOutdatedOptions
    $allcommands
)
upgrade=(
    '-y'
    '-whatif'
    '-?'
    '--pre'
    '--version'
    '--except'
    '--params'
    '--install-arguments'
    '--override-arguments'
    '--ignore-dependencies'
    '--source'
    '--user'
    '--password'
    '--prerelease'
    '--forcex86'
    '--not-silent'
    '--package-parameters'
    '--exit-when-reboot-detected'
    '--ignore-detected-reboot'
    '--allow-downgrade'
    '--allow-multiple-versions'
    '--require-checksums'
    '--use-package-exit-codes'
    '--ignore-package-exit-codes'
    '--skip-automation-scripts'
    '--fail-on-unfound'
    '--fail-on-not-installed'
    '--ignore-checksums'
    '--allow-empty-checksums'
    '--allow-empty-checksums-secure'
    '--download-checksum'
    '--download-checksum-type'
    '--download-checksum-x64'
    '--download-checksum-type-x64'
    '--exclude-prerelease'
    '--stop-on-first-package-failure'
    '--use-remembered-options'
    '--ignore-remembered-options'
    '--skip-when-not-installed'
    '--install-if-not-installed'
    '--disable-package-repository-optimizations'
    '--pin'
    $proInstallUpgradeOptions
    $proUpgradeOptions
    $allcommands
)
uninstall=(
    '-y'
    '-whatif'
    '-?'
    '--force-dependencies'
    '--remove-dependencies'
    '--all-versions'
    '--source'
    '--version'
    '--uninstall-arguments'
    '--override-arguments'
    '--not-silent'
    '--params'
    '--package-parameters'
    '--exit-when-reboot-detected'
    '--ignore-detected-reboot'
    '--use-package-exit-codes'
    '--ignore-package-exit-codes'
    '--skip-automation-scripts'
    '--use-autouninstaller'
    '--skip-autouninstaller'
    '--fail-on-autouninstaller'
    '--ignore-autouninstaller-failure'
    '--stop-on-first-package-failure'
    $proUninstallOptions
    $allcommands
)
new=(
    '--template-name'
    '--output-directory'
    '--automaticpackage'
    '--version'
    '--maintainer'
    '--use-built-in-template'
    '-?'
    $proNewOptions
    $allcommands
)
pack=(
    '--version'
    '--output-directory'
    $allcommands
)
push=(
    '--source'
    '--api-key'
    '--timeout'
    $proPushOptions
    $allcommands
)
source=(
    '--name'
    '--source'
    '--user'
    '--password'
    '--priority'
    '--bypass-proxy'
    '--allow-self-service'
    '-?'
    $allcommands
)
config=(
    '--name'
    '--value'
    $allcommands
)
feature=(
    '--name'
    $allcommands
)
apikey=(
    '--source'
    '--api-key'
    '--remove'
    '-?'
    $allcommands
)
download=(
    '--internalize'
    '--internalize-all-urls'
    '--ignore-dependencies'
    '--installed-packages'
    '--ignore-unfound-packages'
    '--resources-location'
    '--download-location'
    '--outputdirectory'
    '--source'
    '--version'
    '--prerelease'
    '--user'
    '--password'
    '--cert'
    '--certpassword'
    '--append-use-original-location'
    '--recompile'
    '--disable-package-repository-optimizations'
    '-?'
    '--use-self-service'
    $allcommands
)
sync=(
    '--output-directory'
    '--id'
    '--package-id'
    '--use-self-service'
    $allcommands
)
optimize=(
    '--deflate-nupkg-only'
    '--id'
    '--use-self-service'
    $allcommands
)
export=(
    '--include-version-numbers'
    '--output-file-path'
    $allcommands
)

template=(
    '--name'
    $allcommands
)

function _chocolatey
{
    local _line

    _arguments -C \
        "1: :('search' 'list' 'info' 'install' 'outdated' 'upgrade' 'uninstall' 'new' 'download' 'optimize' 'pack' 'push' 'sync' '-h' '--help' 'pin' 'source' 'config' 'feature' 'apikey' 'export' 'help' 'template' '--version')" \
        "-?" \
        "*::arg:->args"

    case $line[1] in
        'search')
            _describe 'command' search
            ;;
        'list')
            _describe 'command' list
            ;;
        'info')
            _describe 'command' info
            ;;
        'install')
            _describe 'command' install
            ;;
        'outdated')
            _describe 'command' outdated
            ;;
        'upgrade')
            _describe 'command' upgrade
            ;;
        'uninstall')
            _describe 'command' uninstall
            ;;
        'new')
            _describe 'command' new
            ;;
        'download')
            _describe 'command' download
            ;;
        'optimize')
            _describe 'command' optimize
            ;;
        'pack')
            _describe 'command' pack
            ;;
        'push')
            _describe 'command' push
            ;;
        'sync')
            _describe 'command' sync
            ;;
        'pin')
            _describe 'command' pin
            ;;
        'source')
            _describe 'command' source
            ;;
        'config')
            _describe 'command' config
            ;;
        'feature')
            _describe 'command' feature
            ;;
        'apikey')
            _describe 'command' apikey
            ;;
        'export')
            _describe 'command' export
            ;;
        'template')
            _describe 'command' template
            ;;
    esac
}

_chocolatey